{"version":3,"file":"main.78d03447de7f6a349798.hot-update.js","sources":["webpack:///./src/components/Select.jsx"],"sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\"\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport Up from \"../assets/caret-up-solid.svg\"\nimport Down from \"../assets/caret-down-solid.svg\"\n\nconst CONTAINER = styled.div`\n    position: relative;\n    ${(props) => props.customStyle}\n`\n\nconst TITLE = styled.h3`\n    ${(props) => props.customStyle}\n`\n\nconst LIST = styled.div`\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    border: solid 1px;\n    border-top: none;\n    width: 408px;\n    ${(props) => props.customStyle}\n`\n\nconst SELECTMENU = styled.div`\n    display: flex;\n    align-items: center;\n    border: solid 1px;\n    padding: 2px 4px;\n    width: 400px;\n    ${(props) => props.customStyle}\n`\n\nconst PLACEHOLDER = styled.span`\n    cursor: pointer;\n    width: 100%;\n    ${(props) => props.customStyle}\n`\n\nconst OPTIONSELECTED = styled.span`\n    cursor: pointer;\n    width: 100%;\n    ${(props) => props.customStyle}\n`\n\nconst IMG = styled.img`\n    height: 20px;\n    width: 20px;\n    ${(props) => props.customStyle}\n`\n\nconst OPTION = styled.div`\n    cursor: pointer;\n    padding: 2px 4px;\n    width: 400px;\n\n    :hover {\n        background: ${props => props.hoverBackground};\n    }\n\n    ${(props) => props.customStyle}\n`\n\n/**\n* @param {object} props - Props\n* @param {string} down - To change the default down image\n* @param {string} hoverBackground - To customize the hover option background style\n* @param {array} options - Options to display\n* @param {string} placeholder - If no value then option 1 by default\n* @param {object} styleContainer - To customize the container style which contains all the select menu \n* @param {object} styleImg - To customize the img style\n* @param {object} styleList - To customize the list of options style\n* @param {object} styleOption - To customize the option style\n* @param {object} styleOptionSelected - To customize the option selected style\n* @param {object} stylePlaceholder - To customize the placeholder style\n* @param {object} styleSelectMenu - To customize the select menu style\n* @param {object} styleTitle - To customize the title style\n* @param {string} title - To change the title content\n* @param {string} up - To change the default up image\n* @returns {component} - Select menu\n*/\n\nfunction Select ({down, hoverBackground, options, placeholder, styleContainer, styleImg, styleList, styleOption, stylePlaceholder, styleOptionSelected, styleSelectMenu, styleTitle, title, up}) {\n    const [open, setOpen] = useState(false)\n    const [choice, setChoice] = useState(placeholder !== \"\" ? placeholder : options[0])\n    const [initialOption, setInitialOption] = useState(true)\n\n    const selected = (e) => {\n        setChoice(e.target.innerHTML)\n        setOpen(false)\n        initialOption && setInitialOption(false)\n    }\n\n    const escape = () => {\n        setOpen(false)\n    }\n\n    useEffect(() => {\n        if (open) {\n            window.addEventListener(\"keydown\", (e) => {\n                if (e.key === \"Escape\") {\n                    escape()\n                }\n            })\n\n            window.addEventListener(\"click\", escape)\n        }\n\n        return () => {\n            window.removeEventListener(\"keydown\", escape);\n            window.removeEventListener(\"click\", escape)\n        }\n      },[open])\n\n    return (\n        <Fragment>\n            {title !== \"\" && <TITLE customStyle = {styleTitle}>{title}</TITLE>}\n            <SELECTMENU customStyle = {styleSelectMenu}>\n                {initialOption ? \n                    <PLACEHOLDER customStyle = {stylePlaceholder} onClick = {(e) => {\n                        setOpen(true)}}\n                    >\n                        {choice}\n                    </PLACEHOLDER>\n                :\n                    <OPTIONSELECTED onClick = {(e) => setOpen(true)} customStyle = {styleOptionSelected}>{choice}</OPTIONSELECTED>\n                }\n                {open ? <IMG src = {up} customStyle = {styleImg}/> : <IMG src = {down} customStyle = {styleImg}/>}\n            </SELECTMENU>\n\n            {open ?\n                <LIST customStyle = {styleList}>\n                    {options.map((option, index) =>(\n                        <OPTION key = {index} onClick = {(e) => selected(e)} hoverBackground = {hoverBackground} customStyle = {styleOption}>\n                            {option}\n                        </OPTION>\n                    ))}\n                </LIST>\n            :\n                null\n            }\n        </Fragment>\n    )\n}\n\nSelect.propTypes = {\n    down: PropTypes.string,\n    hoverBackground: PropTypes.string, \n    options: PropTypes.array,\n    placeholder: PropTypes.string,\n    styleContainer: PropTypes.object,\n    styleImg: PropTypes.object,\n    styleList: PropTypes.object,\n    styleOption: PropTypes.object,\n    styleOptionSelected: PropTypes.object,\n    stylePlaceholder: PropTypes.object,\n    styleSelectMenu: PropTypes.object,\n    styleTitle: PropTypes.object,\n    title: PropTypes.string,\n    up: PropTypes.string,\n}\n  \nSelect.defaultProps = {\n    down: Down,\n    hoverBackground: \"#CECECE\",\n    options: [\"Option 1\", \"Option 2\", \"Option 3\"],\n    placeholder: \"\",\n    styleContainer: {},\n    styleImg: {},\n    styleList: {},\n    styleOption: {},\n    styleOptionSelected: {},\n    stylePlaceholder: {},\n    styleSelectMenu: {},\n    styleTitle: {},\n    title: \"\",\n    up: Up\n}\n\nexport default Select"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;;;AAEA;AAEA;AAAA;AAGA;AACA;AAAA;AAGA;AAOA;AAAA;AAGA;AAMA;AAAA;AAGA;AAGA;AAAA;AAGA;AAGA;AAAA;AAGA;AAGA;AAAA;AAGA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAcA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AADA;AAhBA;AA4BA;AACA;AA9DA;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AACA;;;;;;;;;;;A","sourceRoot":""}